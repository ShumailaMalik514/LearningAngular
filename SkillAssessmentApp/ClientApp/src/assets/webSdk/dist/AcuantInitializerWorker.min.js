"use strict"; "function" == typeof importScripts && (importScripts("AcuantInitializerService.min.js"), AcuantInitializerModule().then(i => { let e = i.addFunction(t, "vi"); function t(i) { postMessage({ func: "initialize", status: i }) } onmessage = (n => { if (n && n.data) if ("initialize" === n.data.func) { let a = n.data.data; a.creds && a.endpoint ? i.ccall("initialize", null, ["string", "string", "number"], [a.creds, a.endpoint, e]) : (console.error("missing params"), t(6)) } else if ("initializeWithToken" === n.data.func) { let a = n.data.data; a.token && a.endpoint ? i.ccall("initializeWithToken", null, ["string", "string", "number"], [a.token, a.endpoint, e]) : (console.error("missing params"), t(6)) } else console.error("called with no func specified"), t(7) }), postMessage({ initializerWorker: "started" }) }));
